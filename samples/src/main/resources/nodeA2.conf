
akka.cluster.roles += "wPreferred"
akka.cluster.roles += "RegionA"

akka.actor.remote.quarantine-after-silence = 15 d


node {

  id = "Node 2 in Region A"

  services {
    sample = "rs.samples.SimpleService"
  }

  cluster {

    discovery {
      region-based-http {
        exposure {
          enabled = off
        }
        regions-required = ["RegionA", "RegionB"]
        region {
          RegionA.contacts = ["localhost:3801"]
          RegionB.contacts = ["localhost:3803"]
        }
      }
    }

  }
}

akka.remote.netty.tcp {
  hostname = "localhost"
  port = 2802
  bind-hostname = "localhost"
  bind-port = 2802
}



node.cluster.discovery.pre-discovery-timeout = 1s



akka {
  stdout-loglevel = "INFO"
  loglevel = "INFO"
  actor {
    debug {
      # enable function of LoggingReceive, which is to log any received message at
      # DEBUG level
      receive = on
      lifecycle = on
      event-stream = on
    }
  }
  remote {
    # If this is "on", Akka will log all outbound messages at DEBUG level,
    # if off then they are not logged
    log-sent-messages = on
    log-received-messages = on
  }
}

akka.server.parsing.max-content-length = 256m


akka {
  actor {
    default-dispatcher {
      executor = "thread-pool-executor"
      thread-pool-executor {
        //      task-queue-type = "array"
        core-pool-size-min = 4
        core-pool-size-max = 4
        max-pool-size-min = 16
        max-pool-size-max = 16
      }
      throughput = 4
    }
  }
}


